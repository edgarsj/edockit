name: Release

on:
  push:
    tags:
      - "v*" # This triggers the workflow when you push a tag that starts with 'v'
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to create release for"
        required: true
        default: ""

jobs:
  # First, run all the same checks from your CI workflow
  verify:
    name: Verify Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Check formatting
        run: npm run format:check

      - name: Run Jest tests
        run: npm test

      - name: Run integration tests
        run: npm run test:integration

      - name: Run browser tests
        run: npm run test:browser

  # # Only proceed with publishing if verification passes
  # publish:
  #   name: Publish to npm
  #   needs: verify
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0 # This ensures git history is available for version checking

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: "20"
  #         registry-url: 'https://registry.npmjs.org/'
  #         cache: "npm"

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Publish to npm
  #       run: npm publish
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Create a GitHub release to document the changes
  create-github-release:
    name: Create GitHub Release
    needs: verify
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for creating releases
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          # Optionally, you can auto-generate release notes
          generate_release_notes: true
